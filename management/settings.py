"""
Django settings for management project.

Generated by 'django-admin startproject' using Django 5.2.6.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-(@xy$6d$y@--dzz*$$956$mv)uf)-!yw&3pp6xcdibthkrgj=b'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

# <-- CHANGE HERE: It's good practice to add your hosts even in development.
ALLOWED_HOSTS = ['127.0.0.1', 'localhost', '192.168.0.102']


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'rest_framework',
    'corsheaders',  # App is correctly installed
    'rest_framework.authtoken',
    'mathfilters',
    'core',
]

# <-- CHANGE HERE: The order of middleware is critical.
# CorsMiddleware must be placed at the top.
MIDDLEWARE = [
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]


ROOT_URLCONF = 'management.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / 'templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'management.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

# Database
DATABASES = {
    'default': {
        # for PostgreSQL
         #"ENGINE": "django.db.backends.postgresql_psycopg2",
         #'PORT': '5432',   # for PostgreSQL
        #'NAME': 'buisness_management',
        #'USER': 'postgres',
        #'PASSWORD': '123456',
        #'HOST': 'localhost',

           # for MySQl
           'ENGINE': 'django.db.backends.mysql',
           'NAME': 'pabnlylf_pabnabazar',      # Database name from cPanel
           'USER': 'pabnlylf',       # Database user from cPanel
           'PASSWORD': 'QbeUduuTMtvA',   # Password you set
           'HOST': 'localhost',
           'PORT': '3306',
       }
   }
    



# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

STATIC_URL = '/static/'
STATICFILES_DIRS = [BASE_DIR / 'static']
STATIC_ROOT = BASE_DIR / 'staticfiles'

# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'


REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': [
        'rest_framework.authentication.TokenAuthentication',
    ],
    'DEFAULT_PERMISSION_CLASSES': [
        'rest_framework.permissions.IsAuthenticated',
    ],
}


AUTH_USER_MODEL = 'core.User'  # Use custom User model


# <-- CHANGE HERE: Add this section to define which frontends can access your API.
# settings.py

CORS_ALLOW_ALL_ORIGINS = True
#CORS_ALLOWED_ORIGINS = [
 #   "http://localhost:8080",
  #  "http://127.0.0.1:8080",
   # "http://192.168.0.102:8080", # Your old IP, can be kept
    #"http://172.28.48.1:8080",    # <-- ADD THIS NEW LINE
#]


CSRF_TRUSTED_ORIGINS = ['http://localhost:8000', 'http://127.0.0.1:8000', 'http://192.168.0.102:8080', 'http://localhost:8080']

# For development - disable CSRF for API endpoints
# In production, you should use proper CSRF tokens
if DEBUG:
    REST_FRAMEWORK['DEFAULT_AUTHENTICATION_CLASSES'].append(
        'rest_framework.authentication.TokenAuthentication'
    )